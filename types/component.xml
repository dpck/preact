<types namespace="preact">

  <constructor name="Component" desc="Preact component.">
    <arg type="!Object" name="props" opt>The initial component props.</arg>
    <arg type="!Object" name="context" opt>
      The initial context from parent components' getChildContext.
    </arg>
<!-- 
    prop static name="defaultProps" opt>
      The default properties to instantiate on construction.
    </prop> -->

    <prop alias="__x" type="boolean" name="_disable" opt>
      Turns off stateful re-rendering.
    </prop>

    <prop static type="!Object" name="defaultProps" opt>
      Properties that will be assigned upon construction of the component.
    </prop>
    <fn static name="getDerivedStateFromProps" opt return="!Object">
      <arg name="props" type="!Object">Component properties.</arg>
      <arg name="state" type="!Object">Component plain state.</arg>
      The function to compute the state from properties.
    </fn>

    <prop type="!Object" name="context">The context.</prop>
    <prop type="!Object" name="props">The properties.</prop>
    <prop type="!Object" name="state">The state.</prop>

    <fn name="setState">
      <arg type="!Object" name="state">The state.</arg>
      <arg type="function(): void" name="callback" opt>
        The callback after completion.
      </arg>
    </fn>
    <fn name="forceUpdate">
      <arg type="function(): void" name="callback" opt>
        The callback after completion.
      </arg>
    </fn>
    <fn name="render" return="preact.VNode">
      <arg type="!Object" name="props" opt>
        Component properties.
      </arg>
      <arg type="!Object" name="state" opt>
        Component state.
      </arg>
      <arg type="!Object" name="context" opt>
        Component context.
      </arg>
    </fn>
    <fn name="componentWillMount" />
    <fn name="componentDidMount" />
    <fn name="componentWillUnmount" />

    <fn name="getChildContext" return="!Object" />

    <fn name="componentWillReceiveProps">
      <arg type="!Object" name="nextProps" opt>
        New properties.
      </arg>
      <arg type="!Object" name="nextContext" opt>
        New context.
      </arg>
    </fn>
    <fn name="shouldComponentUpdate" return="boolean">
      <arg type="!Object" name="nextProps" opt>
        New properties.
      </arg>
      <arg type="!Object" name="nextState" opt>
        New state.
      </arg>
      <arg type="!Object" name="nextContext" opt>
        New context.
      </arg>
    </fn>
    <fn name="componentWillUpdate">
      <arg type="!Object" name="nextProps" opt>
        New properties.
      </arg>
      <arg type="!Object" name="nextState" opt>
        New state.
      </arg>
      <arg type="!Object" name="nextContext" opt>
        New context.
      </arg>
    </fn>
    <fn name="componentDidUpdate">
      <arg type="!Object" name="prevProps" opt>
        Previous properties.
      </arg>
      <arg type="!Object" name="prevState" opt>
        Previous state.
      </arg>
      <arg type="!Object" name="prevContext" opt>
        Previous context.
      </arg>
    </fn>

  </constructor>

</types>
