<types namespace="preact">

  <!-- a) static does not work on typedef in typescript because only Object is allow -->
  <!-- this can be solved with & -->
  <!-- b) in externs, static does not work either as @typedef {function(new: preact.Component)}
  is generated without prototype definition. add manually -->

  <interface name="VNode" desc="Virtual DOM Node.">
    <prop name="nodeName" type="string|function(new: preact.Component)|Function">
      The string of the DOM node to create or Component constructor to render.
    </prop>
    <prop name="children" type="!Array<preact.VNode|string|boolean|number|undefined>">
      The children of node. Can be scalar values (string, number, boolean, null, undefined, etc), more Virtual DOM elements, or infinitely nested arrays of the above.
    </prop>
    <prop name="key" opt type="string|number">
      The key used to identify this VNode in a list.
    </prop>
    <prop name="attributes" type="Object">
      The properties of this VNode.
    </prop>
  </interface>

</types>
